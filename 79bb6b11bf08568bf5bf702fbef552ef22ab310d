{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ef6d6120_ec606274",
        "filename": ".github/workflows/trybot.yml",
        "patchSetId": 48
      },
      "lineNbr": 215,
      "author": {
        "id": 1021694
      },
      "writtenOn": "2023-07-27T11:25:17Z",
      "side": 1,
      "message": "I don\u0027t see the `matrix` context being set up in this file, though it appears to be mentioned in the CUE source. Is it being orchestrated by some external iterator making multiple workflow dispatch calls, or has `jobs.test.matrix` gone missing from this generated file?",
      "revId": "79bb6b11bf08568bf5bf702fbef552ef22ab310d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6129c8e5_ecd40f6a",
        "filename": ".github/workflows/trybot.yml",
        "patchSetId": 48
      },
      "lineNbr": 215,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-07-27T11:37:30Z",
      "side": 1,
      "message": "Good catch. I\u0027ve simplified things by using a matrix in both cases, just that the CL workflow only contains one matrix entry.",
      "parentUuid": "ef6d6120_ec606274",
      "revId": "79bb6b11bf08568bf5bf702fbef552ef22ab310d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a433f4aa_08da1f3a",
        "filename": "internal/ci/github/trybot.cue",
        "patchSetId": 48
      },
      "lineNbr": 230,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-07-27T10:50:58Z",
      "side": 1,
      "message": "I wonder if we should at least deduplicate the strings `\u0027Linux\u0027` and `\u0027macOS\u0027`.",
      "revId": "79bb6b11bf08568bf5bf702fbef552ef22ab310d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5dcda4b_277af2cb",
        "filename": "internal/ci/github/trybot.cue",
        "patchSetId": 48
      },
      "lineNbr": 230,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-07-27T11:37:30Z",
      "side": 1,
      "message": "I don\u0027t think this is necessary with other DRY-ing up I have done in response to your other point.",
      "parentUuid": "a433f4aa_08da1f3a",
      "revId": "79bb6b11bf08568bf5bf702fbef552ef22ab310d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7bf6b7c_0f23fcae",
        "filename": "internal/ci/github/trybot.cue",
        "patchSetId": 48
      },
      "lineNbr": 248,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-07-27T10:50:58Z",
      "side": 1,
      "message": "is this step missing \"if os is mac\"?\n\nin fact, I wonder if you could set it for all steps in this list via a comprehension or unification. saves the repetition, and avoid silly mistakes like this one.",
      "revId": "79bb6b11bf08568bf5bf702fbef552ef22ab310d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67ab7964_047fd18c",
        "filename": "internal/ci/github/trybot.cue",
        "patchSetId": 48
      },
      "lineNbr": 248,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-07-27T10:51:42Z",
      "side": 1,
      "message": "or alternatively unify with such a \"if os is mac\" step conditional when you insert these sub-lists or elements into the top list, then you deduplicate even more.",
      "parentUuid": "b7bf6b7c_0f23fcae",
      "revId": "79bb6b11bf08568bf5bf702fbef552ef22ab310d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b39cd7e_5dc34459",
        "filename": "internal/ci/github/trybot.cue",
        "patchSetId": 48
      },
      "lineNbr": 248,
      "author": {
        "id": 1021694
      },
      "writtenOn": "2023-07-27T11:25:17Z",
      "side": 1,
      "message": "It\u0027s also missing a `name` field.",
      "parentUuid": "67ab7964_047fd18c",
      "revId": "79bb6b11bf08568bf5bf702fbef552ef22ab310d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb9fb2a7_561dd607",
        "filename": "internal/ci/github/trybot.cue",
        "patchSetId": 48
      },
      "lineNbr": 248,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-07-27T11:37:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "67ab7964_047fd18c",
      "revId": "79bb6b11bf08568bf5bf702fbef552ef22ab310d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07b810f9_98bf4e19",
        "filename": "internal/ci/github/trybot.cue",
        "patchSetId": 48
      },
      "lineNbr": 264,
      "author": {
        "id": 1021694
      },
      "writtenOn": "2023-07-27T11:25:17Z",
      "side": 1,
      "message": "I know that the topology/layout of the CUE file doesn\u0027t currently lend itself to this approach, but I submit that it would be kinder to macOS users to version control a top-level `Brewfile` (and possibly `Brewfile.lock.json`, depending on our update cadence/automation inclinations) detailing all the brew-install-able deps.\n\nThis would then be installed with brew bundle (https://docs.brew.sh/Manpage#bundle-subcommand), both for the macOS user and as a single pre-tool-setup/-configuration step here in CI.",
      "revId": "79bb6b11bf08568bf5bf702fbef552ef22ab310d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6f103b1_373a9aec",
        "filename": "internal/ci/github/trybot.cue",
        "patchSetId": 48
      },
      "lineNbr": 264,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-07-27T11:37:30Z",
      "side": 1,
      "message": "Possibly. I\u0027m happy to leave this for now however, because I\u0027ve burnt enough cycles to get this up and running. \n\nMy preference would be to use a nix-based approach in any case.",
      "parentUuid": "07b810f9_98bf4e19",
      "revId": "79bb6b11bf08568bf5bf702fbef552ef22ab310d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}