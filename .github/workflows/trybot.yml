# Code generated internal/ci/ci_tool.cue; DO NOT EDIT.

name: TryBot
"on":
  push:
    branches:
      - master
      - alpha
      - ci/test
  pull_request: {}
jobs:
  test:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Early git and code sanity checks
        run: |-
          # Ensure the recent commit messages have Signed-off-by headers.
          # TODO: Remove once this is enforced for admins too;
          # see https://bugs.chromium.org/p/gerrit/issues/detail?id=15229
          # TODO: Our --max-count here is just 1, because we've made mistakes very
          # recently. Increase it to 5 or 10 soon, to also cover CL chains.
          for commit in $(git rev-list --max-count=1 HEAD); do
          	if ! git rev-list --format=%B --max-count=1 $commit | grep -q '^Signed-off-by:'; then
          		echo -e "\nRecent commit is lacking Signed-off-by:\n"
          		git show --quiet $commit
          		exit 1
          	fi
          done

          # Ensure that commit messages have a blank second line.
          # We know that a commit message must be longer than a single
          # line because each commit must be signed-off.
          if git log --format=%B -n 1 HEAD | sed -n '2{/^$/{q1}}'; then
          	echo "second line of commit message must be blank"
          	exit 1
          fi

          # Ensure that the commit author is the same as the signed-off-by.  This
          # is a basic requirement of DCO. It is enforced by Gerrit (although
          # noting that in Gerrit the author name does not have to match, only
          # the email address), but _not_ by the DCO GitHub app:
          #
          #   https://github.com/dcoapp/app/issues/201
          #
          # Provide a sanity check as part of GitHub workflows that should enforce
          # this, e.g. trybot workflows.
          #
          # We do so by comparing the commit author and "Signed-off-by" trailer for
          # strict equality. Whilst this is more strict than Gerrit, it should
          # generally be the case, and we can always relax this when presented with
          # specific situations where it is is a problem.

          # commit author email address
          commitauthor="$(git log -1 --pretty="%ae")"

          # signed-off-by trailer email address. There is no way to parse just the
          # email address from the trailer in the same way as git log, so instead
          # grab the relevant trailer and then take the last whitespace-delimited
          # part as the "<>" contained email address.
          # Getting the Signed-off-by trailer in this way causes blank
          # lines for some reason. Use awk to remove them.
          commitsigner="$(git log -1 --pretty='%(trailers:key=Signed-off-by,valueonly)' | sed -ne 's/.* <\(.*\)>/\1/p')"

          if [[ "$commitauthor" != "$commitsigner" ]]; then
          	echo "commit author email address does not match signed-off-by trailer"
          	exit 1
          fi
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.4
      - name: Install Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 0.108.0
          extended: true
      - id: npm-cache-dir
        name: Get npm cache directory
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - id: go-mod-cache-dir
        name: Get go mod cache directory
        run: echo "dir=$(go env GOMODCACHE)" >> ${GITHUB_OUTPUT}
      - id: go-cache-dir
        name: Get go build/test cache directory
        run: echo "dir=$(go env GOCACHE)" >> ${GITHUB_OUTPUT}
      - uses: actions/cache@v3
        with:
          path: |-
            ${{ steps.npm-cache-dir.outputs.dir }}
            ${{ steps.go-mod-cache-dir.outputs.dir }}/cache/download
            ${{ steps.go-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-${{ github.run_id }}
          restore-keys: ${{ runner.os }}
      - name: Ensure latest CUE
        run: |-
          GOPROXY=direct go get -d cuelang.org/go@latest
          go mod tidy
          go mod tidy
      - name: Regenerate
        run: go generate ./...
      - name: Test
        run: go test ./...
      - name: Check module is tidy
        run: go mod tidy
      - name: Dist
        run: ./build.bash
      - name: Verify commit is clean
        run: test -z "$(git status --porcelain)" || (git status; git diff; false)
      - id: alias
        if: ${{github.repository == 'cue-lang/cuelang.org-trybot' && startsWith(github.head_ref, 'trybot/')}}
        run: |-
          alias="$(echo '${{github.head_ref}}' | sed -E 's/^trybot\/I[a-f0-9]+\/[a-f0-9]+\/([0-9]+)\/([0-9]+).*/cl-\1-\2/')"
          echo "alias=$alias" >> $GITHUB_OUTPUT
      - if: ${{github.repository == 'cue-lang/cuelang.org-trybot' && startsWith(github.head_ref, 'trybot/')}}
        name: Deploy preview of CL
        run: 'netlify deploy --alias ${{ steps.alias.outputs.alias }} -f functions -d _public -m "Deploy preview of CL" -s cue-cls --debug '
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN_CUE_CLS}}
      - run: find '${{ steps.npm-cache-dir.outputs.dir }}' '${{ steps.go-mod-cache-dir.outputs.dir }}/cache/download' '${{ steps.go-cache-dir.outputs.dir }}' -type f -amin +7200 -delete -print
