{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a76b44ed_5f9d701f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-10-29T08:34:21Z",
      "side": 1,
      "message": "LGTM generally, but please separate out the upgrade of the CUE version for the repo.",
      "revId": "238cf6d45f192d7f46df0654739b22cc513e8233",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5a9b1b4_541c60af",
        "filename": "go.mod",
        "patchSetId": 9
      },
      "lineNbr": 6,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-10-29T08:34:21Z",
      "side": 1,
      "message": "Please move this to a previous change. Otherwise we clutter what is actually meant to be changing here with \"other changes\"",
      "revId": "238cf6d45f192d7f46df0654739b22cc513e8233",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1c64996_a6e8960e",
        "filename": "go.mod",
        "patchSetId": 9
      },
      "lineNbr": 6,
      "author": {
        "id": 1021694
      },
      "writtenOn": "2024-10-29T13:45:44Z",
      "side": 1,
      "message": "@paul@myitcv.io I\u0027m having trouble doing that, and I\u0027d like to discuss the benefit (separating out modifications to 2 isolated `go.*` files out of the 17 files changed in this CL) versus the cost of solving the problem I\u0027m observing.\n\nThat cost /appears/ to be having to rework the way we work with the package contents of `github.com/SchemaStore/schemastore/src/schemas/json` - in a way which is currently unclear to me. At least one of the 0.11.0 alphas has changed its JSON Schema handling, such that when `go generate` imports the fixed, upstream SchemaStore commit, it no longer works with this repo\u0027s CUE.\n\nI can\u0027t see an obvious way to update the current CUE (the errors are pretty long, and quite complex). If I were to spend the time understanding the change needed, the very next CL in this stack (i.e. this CL) would immediately make those changes obsolete, as its entire purpose is to remove the static in-repo package and move to an imported package.\n\nI\u0027m not asking you to work on fixing this problem, but just to discuss with me the time implications of trying to solve it. The problem can be observed when taking the current tip of master, and running:\n\n```\ngo get cuelang.org/go@v0.11.0-alpha.4\ngo mod tidy\ngo generate ./...\n```",
      "parentUuid": "a5a9b1b4_541c60af",
      "revId": "238cf6d45f192d7f46df0654739b22cc513e8233",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34b696e8_13fc809c",
        "filename": "go.mod",
        "patchSetId": 9
      },
      "lineNbr": 6,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-10-29T16:11:03Z",
      "side": 1,
      "message": "Oh I was assuming it was a straightforward thing. No worries about bundling the two together...",
      "parentUuid": "b1c64996_a6e8960e",
      "revId": "238cf6d45f192d7f46df0654739b22cc513e8233",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one Code-Review+2 is required. Self review is not allowed, except for Marcel."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader OR label:Code-Review\u003dMAX,user\u003dmpvl@gmail.com"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader OR label:Code-Review=MAX,user=mpvl@gmail.com"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MAX,user=mpvl@gmail.com"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "238cf6d45f192d7f46df0654739b22cc513e8233",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Review",
        "description": {
          "value": "Changes that have DO NOT REVIEW in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "238cf6d45f192d7f46df0654739b22cc513e8233",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "238cf6d45f192d7f46df0654739b22cc513e8233",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Holds",
        "description": {
          "value": "Changes with a Hold+1 vote are not submittable."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "NOT label:Hold\u003d1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"NOT label:Hold=1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Hold=1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "238cf6d45f192d7f46df0654739b22cc513e8233",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "TryBot-Result",
        "description": {
          "value": "TryBot-Result+1 is required. Can be bypassed by Chief Cueckoo with Code-Review+2."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:TryBot-Result\u003dMAX OR label:Code-Review\u003dMAX,user\u003dchief.cueckoo@gmail.com"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:TryBot-Result=MAX OR label:Code-Review=MAX,user=chief.cueckoo@gmail.com"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:TryBot-Result=MAX"],"failingAtoms":["label:Code-Review=MAX,user=chief.cueckoo@gmail.com"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "238cf6d45f192d7f46df0654739b22cc513e8233",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}