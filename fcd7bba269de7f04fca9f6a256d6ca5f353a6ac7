{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7048ed2b_acba24d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1021694
      },
      "writtenOn": "2024-03-20T16:44:56Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "fcd7bba269de7f04fca9f6a256d6ca5f353a6ac7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e02bd3f4_c00eed63",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-20T18:27:05Z",
      "side": 1,
      "message": "This change isn\u0027t correct for a couple of reasons. Most importantly the order of iteration of a struct is not part of the spec yet, so not guaranteed. For a list it is guaranteed. And per https://docs.netlify.com/routing/redirects/:\n\n\u003e The redirects engine will process the first matching rule it finds, reading from top to bottom.\n\nSecondly, it seems like a minor cosmetic improvement to define a key-value pair at the cost of being able to specify the options that might be needed for a redirect:\n\nhttps://docs.netlify.com/routing/redirects/redirect-options/\n\nFor example, we want some of these redirects to be 301, i.e. we\u0027ve now permanently moved a page.",
      "revId": "fcd7bba269de7f04fca9f6a256d6ca5f353a6ac7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0c11906_22090aba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1021694
      },
      "writtenOn": "2024-03-20T18:38:34Z",
      "side": 1,
      "message": "\u003e Ordering\n\nOrdering isn\u0027t an issue because our redirects don\u0027t currently overlap. As \u0026 when they do, we can use the same approach as for ...\n\n\u003e Options\n\nThe presence of the `_redirects` helper doesn\u0027t stop us prefixing the `redirects` struct with more fully specified redirects that don\u0027t want to accept the defaults emitted up by the `_redirects` comprehension.\n\nI\u0027m happy to comment these caveats in there today, or to make the required changes in the next CL of this stack on top of the current system tomorrow, using its more laborious syntax.",
      "parentUuid": "e02bd3f4_c00eed63",
      "revId": "fcd7bba269de7f04fca9f6a256d6ca5f353a6ac7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88a3b9b5_919d931b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-20T18:41:29Z",
      "side": 1,
      "message": "Honestly I don\u0027t think it\u0027s worth a minor improvement in UX for something we change so infrequently. Let\u0027s just keep it simple with a single list.",
      "parentUuid": "f0c11906_22090aba",
      "revId": "fcd7bba269de7f04fca9f6a256d6ca5f353a6ac7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8af2a930_f43e798a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1021694
      },
      "writtenOn": "2024-03-20T18:44:37Z",
      "side": 1,
      "message": "üëç I\u0027ll revise the wider redirection changes tomorrow.",
      "parentUuid": "88a3b9b5_919d931b",
      "revId": "fcd7bba269de7f04fca9f6a256d6ca5f353a6ac7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}