{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0fd67584_2a6e0eab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-16T16:43:31Z",
      "side": 1,
      "message": "With suggestions below.",
      "revId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f24af463_218f9d7b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1021694
      },
      "writtenOn": "2024-04-05T10:15:49Z",
      "side": 1,
      "message": "Superseded by https://review.gerrithub.io/c/cue-lang/cuelang.org/+/1191908.",
      "revId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d626f156_83004272",
        "filename": "content/docs/concept/how-cue-works-with-protocol-buffers/en.md",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-16T16:43:31Z",
      "side": 1,
      "message": "We need to agree on this generally speaking but I think:\n\n\"`cue` command\"\n\nis simplest, and avoids three letter acronyms that don\u0027t necessarily translate well/at all.",
      "range": {
        "startLine": 14,
        "startChar": 52,
        "endLine": 14,
        "endChar": 66
      },
      "revId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "723051fb_2f0b6cd2",
        "filename": "content/docs/concept/how-cue-works-with-protocol-buffers/en.md",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1021694
      },
      "writtenOn": "2024-04-05T10:15:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d626f156_83004272",
      "range": {
        "startLine": 14,
        "startChar": 52,
        "endLine": 14,
        "endChar": 66
      },
      "revId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b60ae8b8_3842f0ae",
        "filename": "content/docs/concept/how-cue-works-with-protocol-buffers/en.md",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-16T16:43:31Z",
      "side": 1,
      "message": "Per our discussion I would make this a multi-step script with a number of hidden uploads/steps:\n\n* Have the proto file first as an upload\n* Run the `cue import` but do not output to stdout\n* Run a hidden script that moves the resulting CUE file sideways \n* Have an upload of a CUE file that should be identical to the output of the `cue import` - this can be accompanied by the prose \"and this is the CUE file that will result\"\n* Run a hidden script that diffs the uploaded CUE file and the now sideways moved result from `cue import` and verifies there is no diff",
      "revId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9887d040_8c4a1a8e",
        "filename": "content/docs/concept/how-cue-works-with-protocol-buffers/en.md",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1021694
      },
      "writtenOn": "2024-04-05T10:15:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b60ae8b8_3842f0ae",
      "revId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c23e454_034f6ff8",
        "filename": "content/docs/concept/how-cue-works-with-protocol-buffers/en.md",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-16T16:43:31Z",
      "side": 1,
      "message": "\"file to CUE that is written to `stdout`:\"",
      "range": {
        "startLine": 67,
        "startChar": 53,
        "endLine": 67,
        "endChar": 65
      },
      "revId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24f66a37_8d6a284a",
        "filename": "content/docs/concept/how-cue-works-with-protocol-buffers/en.md",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1021694
      },
      "writtenOn": "2024-04-05T10:15:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7c23e454_034f6ff8",
      "range": {
        "startLine": 67,
        "startChar": 53,
        "endLine": 67,
        "endChar": 65
      },
      "revId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48be02ad_2c485fd1",
        "filename": "content/docs/concept/how-cue-works-with-protocol-buffers/en.md",
        "patchSetId": 5
      },
      "lineNbr": 146,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-16T16:43:31Z",
      "side": 1,
      "message": "\"to CUE types\"",
      "range": {
        "startLine": 146,
        "startChar": 32,
        "endLine": 146,
        "endChar": 39
      },
      "revId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ee89de1_4a3eb4b0",
        "filename": "content/docs/concept/how-cue-works-with-protocol-buffers/en.md",
        "patchSetId": 5
      },
      "lineNbr": 146,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-16T16:43:31Z",
      "side": 1,
      "message": "\"types\"\n\nThe current wording is wrong to my mind.",
      "range": {
        "startLine": 146,
        "startChar": 9,
        "endLine": 146,
        "endChar": 20
      },
      "revId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1ed9b90_ee8ff952",
        "filename": "content/docs/concept/how-cue-works-with-protocol-buffers/en.md",
        "patchSetId": 5
      },
      "lineNbr": 146,
      "author": {
        "id": 1021694
      },
      "writtenOn": "2024-04-05T10:15:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ee89de1_4a3eb4b0",
      "range": {
        "startLine": 146,
        "startChar": 9,
        "endLine": 146,
        "endChar": 20
      },
      "revId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f6679f9_cff5f428",
        "filename": "content/docs/concept/how-cue-works-with-protocol-buffers/en.md",
        "patchSetId": 5
      },
      "lineNbr": 146,
      "author": {
        "id": 1021694
      },
      "writtenOn": "2024-04-05T10:15:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48be02ad_2c485fd1",
      "range": {
        "startLine": 146,
        "startChar": 32,
        "endLine": 146,
        "endChar": 39
      },
      "revId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one Code-Review+2 is required. Self review is not allowed, except for Marcel."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader OR label:Code-Review\u003dMAX,user\u003dmpvl@gmail.com"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader OR label:Code-Review=MAX,user=mpvl@gmail.com"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MAX,user=mpvl@gmail.com"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Review",
        "description": {
          "value": "Changes that have DO NOT REVIEW in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Holds",
        "description": {
          "value": "Changes with a Hold+1 vote are not submittable."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "NOT label:Hold\u003d1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"NOT label:Hold=1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Hold=1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "TryBot-Result",
        "description": {
          "value": "TryBot-Result+1 is required. Can be bypassed by Chief Cueckoo with Code-Review+2."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:TryBot-Result\u003dMAX OR label:Code-Review\u003dMAX,user\u003dchief.cueckoo@gmail.com"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:TryBot-Result=MAX OR label:Code-Review=MAX,user=chief.cueckoo@gmail.com"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:TryBot-Result=MAX"],"failingAtoms":["label:Code-Review=MAX,user=chief.cueckoo@gmail.com"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "93bd9f5fadf304a08686a2b6dfdd133c5c271d09",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}