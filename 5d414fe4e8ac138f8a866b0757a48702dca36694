{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f129f9b4_de7d0079",
        "filename": "content/docs/tour/expressions/conditional/en.md",
        "patchSetId": 34
      },
      "lineNbr": 12,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:43:38Z",
      "side": 1,
      "message": "This should not be a concrete value; instead `int`",
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "119d2b78_9843dfc3",
        "filename": "content/docs/tour/expressions/fieldcomp/en.md",
        "patchSetId": 34
      },
      "lineNbr": 6,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T09:00:17Z",
      "side": 1,
      "message": "Again, I worry about the use of \"generated\" here (recognising that the current tour uses this language). \"Created\" or \"specified\" seems to work equally well?",
      "range": {
        "startLine": 6,
        "startChar": 14,
        "endLine": 6,
        "endChar": 23
      },
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ffc7c2d_0abe11de",
        "filename": "content/docs/tour/expressions/fieldcomp/en.md",
        "patchSetId": 34
      },
      "lineNbr": 14,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T09:00:17Z",
      "side": 1,
      "message": "\"referenced directly\"",
      "range": {
        "startLine": 14,
        "startChar": 26,
        "endLine": 14,
        "endChar": 46
      },
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e02e081_48fc8734",
        "filename": "content/docs/tour/expressions/fieldcomp/en.md",
        "patchSetId": 34
      },
      "lineNbr": 16,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T09:00:17Z",
      "side": 1,
      "message": "Language to follow the plainer language I suggested in an earlier page.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 16,
        "endChar": 7
      },
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bba5a70_c87e6f96",
        "filename": "content/docs/tour/expressions/fieldcomp/en.md",
        "patchSetId": 34
      },
      "lineNbr": 31,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T09:00:17Z",
      "side": 1,
      "message": "I would add a short comment here that indicates that `city` is a map from the city name to details about that city.",
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81417dbd_5a31b369",
        "filename": "content/docs/tour/expressions/interpolfield/en.md",
        "patchSetId": 34
      },
      "lineNbr": 2,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:41:24Z",
      "side": 1,
      "message": "I think this should be named \"Dynamic Fields\" to follow the spec:\n\nhttps://tip.cuelang.org/docs/references/spec/#dynamic-fields\n\nThe tour is behind the spec and implementation here. Dynamic fields are a more powerful concept and followed later, including the ability to have dynamic optional/required fields.",
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54c907f1_ba3fe137",
        "filename": "content/docs/tour/expressions/interpolfield/en.md",
        "patchSetId": 34
      },
      "lineNbr": 9,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:41:24Z",
      "side": 1,
      "message": "I don\u0027t understand this sentence.\n\nWhat are you trying to say here?",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 9,
        "endChar": 38
      },
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5306c316_5617b476",
        "filename": "content/docs/tour/expressions/interpolfield/en.md",
        "patchSetId": 34
      },
      "lineNbr": 11,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:41:24Z",
      "side": 1,
      "message": "What happens automatically?\n\nIf you are trying to explain how to refer to a dynamic field, I would do so more plainly in the language of https://cl-1178168-9--cue-cls.netlify.app/docs/tour/references/selectors/.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 4
      },
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d80fa182_7d22365d",
        "filename": "content/docs/tour/expressions/interpolfield/en.md",
        "patchSetId": 34
      },
      "lineNbr": 18,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:41:24Z",
      "side": 1,
      "message": "This example is too long to my mind, and in any case will need to be revised slightly in light of the flip to dynamic fields.\n\nHappy to chat it through.",
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd6796f3_ea355c47",
        "filename": "content/docs/tour/expressions/interpolfield/en.md",
        "patchSetId": 34
      },
      "lineNbr": 30,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:41:24Z",
      "side": 1,
      "message": "The identifier is not in scope.",
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27fe3b44_d2bc8dc4",
        "filename": "content/docs/tour/expressions/interpolfield/en.md",
        "patchSetId": 34
      },
      "lineNbr": 36,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:41:24Z",
      "side": 1,
      "message": "Why does this example need disjunctions and defaults?",
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a7c3aba_5bba0a1d",
        "filename": "content/docs/tour/expressions/listcomp/en.md",
        "patchSetId": 34
      },
      "lineNbr": 6,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:53:17Z",
      "side": 1,
      "message": "\"created\" or \"specified\" - generation is something that the CUE tool does to my mind.",
      "range": {
        "startLine": 6,
        "startChar": 13,
        "endLine": 6,
        "endChar": 22
      },
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de1a84e8_962b8a4a",
        "filename": "content/docs/tour/expressions/listcomp/en.md",
        "patchSetId": 34
      },
      "lineNbr": 10,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:53:17Z",
      "side": 1,
      "message": "\"They\" - component is not a term I\u0027m familiar with here.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 16
      },
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59714970_7660eb0d",
        "filename": "content/docs/tour/expressions/listcomp/en.md",
        "patchSetId": 34
      },
      "lineNbr": 14,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:53:17Z",
      "side": 1,
      "message": "Export CUE if you want a more compact form.",
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d54a789_435f3d43",
        "filename": "content/docs/tour/expressions/listcomp/en.md",
        "patchSetId": 34
      },
      "lineNbr": 28,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:53:17Z",
      "side": 1,
      "message": "`rem`\n\nIn any case, I would remove `b`: it doesn\u0027t carry any real weight to my mind.",
      "range": {
        "startLine": 28,
        "startChar": 19,
        "endLine": 28,
        "endChar": 25
      },
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2718d613_96f5ddc2",
        "filename": "content/docs/tour/expressions/listcomp/en.md",
        "patchSetId": 34
      },
      "lineNbr": 30,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:53:17Z",
      "side": 1,
      "message": "Grammatically doesn\u0027t make sense - I wouldn\u0027t worry about the caveat in any case.",
      "range": {
        "startLine": 30,
        "startChar": 28,
        "endLine": 30,
        "endChar": 37
      },
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c4d87a0_f341bd37",
        "filename": "content/docs/tour/expressions/operators/en.md",
        "patchSetId": 34
      },
      "lineNbr": 10,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:23:49Z",
      "side": 1,
      "message": "This link can go at the bottom of the page to my mind: it gets in the way of the reader continuing.",
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9159adc8_ea9d788a",
        "filename": "content/docs/tour/expressions/operators/en.md",
        "patchSetId": 34
      },
      "lineNbr": 16,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:23:49Z",
      "side": 1,
      "message": "Again I worry about the length of the example, especially when a number of the examples don\u0027t add anything over previous ones.",
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe68e857_a1374011",
        "filename": "content/docs/tour/expressions/operators/en.md",
        "patchSetId": 34
      },
      "lineNbr": 25,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:23:49Z",
      "side": 1,
      "message": "I realise there is a balance to be struck here between being sufficiently useful or not, but it feels like we tip over to this example being more like a table-test of all cases. I think one string comparison, possibly with a comment about how strings are compared, will suffice.",
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f0cf07e_4f86c66a",
        "filename": "content/docs/tour/expressions/operators/en.md",
        "patchSetId": 34
      },
      "lineNbr": 27,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:23:49Z",
      "side": 1,
      "message": "Please drop: we will likely remove support for this in favour of the better named `strings.Repeat()`.",
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f82ae08_10583ead",
        "filename": "content/docs/tour/expressions/operators/en.md",
        "patchSetId": 34
      },
      "lineNbr": 29,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:23:49Z",
      "side": 1,
      "message": "Please drop: we will likely remove support for this in favour of the better named `list.Repeat()`",
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec30f057_12355d18",
        "filename": "content/docs/tour/expressions/operators/en.md",
        "patchSetId": 34
      },
      "lineNbr": 30,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:23:49Z",
      "side": 1,
      "message": "Please drop: we are removing support for this in favour of the better named `list.Concat()`",
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42f4ffbc_a8bbfbb5",
        "filename": "content/docs/tour/expressions/operators/en.md",
        "patchSetId": 34
      },
      "lineNbr": 46,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:23:49Z",
      "side": 1,
      "message": "Differ from what?\n\nI think the only difference now comes with division, so we can explain that more plainly. Unless I\u0027m missing something, remainder is only something that is possible via `mod()` and `rem()`.",
      "range": {
        "startLine": 46,
        "startChar": 41,
        "endLine": 46,
        "endChar": 47
      },
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "207ac124_c385a8d5",
        "filename": "content/docs/tour/expressions/operators/en.md",
        "patchSetId": 34
      },
      "lineNbr": 56,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:23:49Z",
      "side": 1,
      "message": "Unless someone knows the distinction between these two, I think we would do better to have the table from the spec here. Rather than trying to do it by example (because in an example we can\u0027t clearly/easily have a \"column\"",
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6481e521_e250b3dd",
        "filename": "content/docs/tour/expressions/query-projection/en.md",
        "patchSetId": 34
      },
      "lineNbr": 6,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T09:06:44Z",
      "side": 1,
      "message": "I find this sentence a little hard to parse:\n\n\"Comprehension also allow us to process data via queries and projections.\"",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 6,
        "endChar": 61
      },
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c221359_aab897df",
        "filename": "content/docs/tour/expressions/query-projection/en.md",
        "patchSetId": 34
      },
      "lineNbr": 8,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T09:06:44Z",
      "side": 1,
      "message": "It\u0027s unclear whether scope of being used here in the context of the language or not. I would avoid using the word altogether. Perhaps more colloquially:\n\n\"Queries select which data items we want, and projections define the shape of each item.\"",
      "range": {
        "startLine": 8,
        "startChar": 39,
        "endLine": 8,
        "endChar": 44
      },
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af2945cc_087aeae6",
        "filename": "content/docs/tour/expressions/query-projection/en.md",
        "patchSetId": 34
      },
      "lineNbr": 11,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T09:06:44Z",
      "side": 1,
      "message": "This paragraph is a bit confusing for me. I would simplify the example below to combine the query and projection into one. We don\u0027t need to be exhaustive in our explanation in prose, or in the example.",
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff7f1f01_08531e83",
        "filename": "hugo/content/en/docs/tour/expressions/interpolation/index.md",
        "patchSetId": 34
      },
      "lineNbr": 13,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-18T08:27:07Z",
      "side": 1,
      "message": "Probably worth including a multi-line string literal for completeness\u0027 sake?",
      "revId": "5d414fe4e8ac138f8a866b0757a48702dca36694",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}