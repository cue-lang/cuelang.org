# Ensure that preprocessor understands how to handle multi-stage scripts.
# This includes formatting an upload node, running a script node, and
# skipping formatting a file in another upload node.

unquote content/dir/en.md golden/content/dir/en.md.writeBack

# Run the preprocessor
exec preprocessor execute --debug=all

# Copy the resulting soure file sideways and use that in comparison
# so that we don't inadvertently update it when using CUE_UPDATE=1
cp content/dir/en.md content/dir/en.md.writeBack

# Verify that the source file is intact
cmp content/dir/en.md.writeBack golden/content/dir/en.md.writeBack

# Verify that the target files match the source contents
cmp hugo/content/en/dir/index.md golden/hugo/content/en/dir/index.md

# Re-run the preprocessor and ensure we have a cache hit
exec preprocessor execute --debug=all
stderr $WORK${/}'content'${/}'dir'${/}'en.md: cache hit for multi-step script; not running'

# Re-run the preprocessor again with --skipcache to ensure we re-run a cache hit
exec preprocessor execute --debug=all --skipcache
stderr $WORK${/}'content'${/}'dir'${/}'en.md: skipping cache for multi-step script; was a hit'

-- hugo/.keep --
-- content/dir/site.cue --
package site
-- content/dir/en.md --
>---
>title: JSON Superset
>---
>{{{with step}}}
>{{{with upload "en" "upload-some-cue"}}}
>#codetab(in.cue) linenos="table"
>-- in.cue --
>// A doc comment
>map: {
>member1: 3 // a line comment
>member2: 4
>}
>{{{end}}}
>{{{with upload "en" "upload-some-json"}}}
>#nofmt(in.json)
>-- in.json --
>{
>"x": 5
>}
>{{{end}}}
>{{{with script "en" "run-the-cue"}}}
>cue eval in.cue # test
>{{{end}}}
>{{{with _script "en" "cue version"}}}
>cue version
>{{{end}}}
>{{{end}}}
-- golden/content/dir/en.md.writeBack --
>---
>title: JSON Superset
>---
>{{{with step}}}
>{{{with upload "en" "upload-some-cue"}}}
>#codetab(in.cue) linenos="table"
>-- in.cue --
>// A doc comment
>map: {
>	member1: 3 // a line comment
>	member2: 4
>}
>{{{end}}}
>{{{with upload "en" "upload-some-json"}}}
>#nofmt(in.json)
>-- in.json --
>{
>"x": 5
>}
>{{{end}}}
>{{{with script "en" "run-the-cue"}}}
>cue eval in.cue # test
>{{{end}}}
>{{{with _script "en" "cue version"}}}
>cue version
>{{{end}}}
>{{{end}}}
-- golden/hugo/content/en/dir/index.md --
---
title: JSON Superset
---
{{< step stepNumber="1" >}}
```text { title="in.cue" linenos="table" }
// A doc comment
map: {
	member1: 3 // a line comment
	member2: 4
}
```
```json { title="in.json" }
{
"x": 5
}
```
```text { title="TERMINAL" codeToCopy="Y3VlIGV2YWwgaW4uY3VlICMgdGVzdAo=" }
$ cue eval in.cue # test
map: {
    member1: 3
    member2: 4
}
```
{{< /step >}}
