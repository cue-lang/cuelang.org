# Test mkdocs mode functionality
# Ensure that --mkdocs-output mode processes content without requiring hugo directory structure
# and uses the specified output directory. Tests both script and step processing.

# Create output directory
mkdir output

# Run the preprocessor in mkdocs mode
exec preprocessor execute --mkdocs-output=output

# Verify that output files were created in the specified directory
cmp output/example/index.md golden/output/example/index.md
cmp output/step_test/index.md golden/output/step_test/index.md

# Verify filesystem contents
exec cmd-find
cmp stdout stdout.golden

-- content/example/en.md --
---
title: mkdocs test example
---

This is a test file for mkdocs mode.

{{{with script "en" "test"}}}
#location top
echo "test script output"
{{{end}}}

-- content/example/site.cue --
package site

content: example: page: {
	leftDelim:  "{{{"
	rightDelim: "}}}"
}

-- content/step_test/en.md --
---
title: Step test in mkdocs mode
---

This tests step functionality in mkdocs mode.

{{{with step "en" "demo step"}}}
echo "Hello from mkdocs mode"
{{{end}}}

-- content/step_test/site.cue --
package site

content: step_test: page: {
	leftDelim:  "{{{"
	rightDelim: "}}}"
}

-- golden/output/example/index.md --
---
title: mkdocs test example
---

This is a test file for mkdocs mode.

``` { .text title="TERMINAL" data-copy="echo &#34;test script output&#34;" }
$ echo "test script output"
test script output
```

-- golden/output/step_test/index.md --
---
title: Step test in mkdocs mode
---

This tests step functionality in mkdocs mode.

[**:material-chevron-right-circle-outline: Step 1**](#step-1){id="step-1"}: echo "Hello from mkdocs mode"

---


-- stdout.golden --
content/example/en.md
content/example/gen_cache.cue
content/example/site.cue
content/step_test/en.md
content/step_test/site.cue
output/example/index.md
output/step_test/index.md
