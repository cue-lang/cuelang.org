{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "131d2b8a_75edcbf4",
        "filename": "internal/cmd/genpkghash/main.go",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-05-26T08:57:06Z",
      "side": 1,
      "message": "perhaps add\n\n\u003e ; are you running via \"go generate\"?\n\nto clarify that you don\u0027t expect the user to set the env var themselves.",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb3f64da_2f64ff2f",
        "filename": "internal/cmd/genpkghash/main.go",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-05-26T17:34:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "131d2b8a_75edcbf4",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fca0eb4b_07583c04",
        "filename": "internal/cmd/genpkghash/main.go",
        "patchSetId": 5
      },
      "lineNbr": 72,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-05-26T08:57:06Z",
      "side": 1,
      "message": "explain why we need go.mod and go.sum: we\u0027re only hashing the source files for the main module, not its deps.",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28e4cb42_da835871",
        "filename": "internal/cmd/genpkghash/main.go",
        "patchSetId": 5
      },
      "lineNbr": 72,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-05-26T17:34:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fca0eb4b_07583c04",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "503ca33f_f0612f77",
        "filename": "internal/cmd/genpkghash/main.go",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-05-26T08:57:06Z",
      "side": 1,
      "message": "remember that you\u0027re using the `-e` flag, so you should be checking the Error field to fail if any of the packages being loaded has errors - otherwise your hash might be bad.\n\nhonestly I was personally thinking that you could do a `filepath.WalkDir` on the root of the module, hashing all Go files that you encounter along the way, plus any extra source files like embedded files.\n\nI guess the only major downside of that approach is that you might have packages in your main module which are not dependencies of ./internal/cmd/preprocessor at all. If that\u0027s the reason for using go list, then that\u0027s fine by me. I\u0027d perhaps document it.",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45eb738e_da7c5e6e",
        "filename": "internal/cmd/genpkghash/main.go",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-05-26T17:34:30Z",
      "side": 1,
      "message": "The hash will be bad, but only temporarily until the error is fixed. When the error is fixed, go generate will need to be called again, but I don\u0027t per se see that being a problem.\n\n\u003e  I\u0027d perhaps document it.\n\nI\u0027m not clear that needs documenting, because to my mind it\u0027s the more correct solution. I would suggest that if we had done the filepath.Walk solution, _that_ would have required documenting because it strays towards being less correct, and therefore a reason would be required. \n\nIf you would like docs though, please let me know what you\u0027d like to read there.",
      "parentUuid": "503ca33f_f0612f77",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89bf17b7_82fa5925",
        "filename": "internal/cmd/genpkghash/main.go",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-05-26T20:50:04Z",
      "side": 1,
      "message": "Hm. I would personally expect `go generate` to not update the hash if the build is broken, because the program simply doesn\u0027t work at all. Minor point though.",
      "parentUuid": "45eb738e_da7c5e6e",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d1bb6ef_bbdc3f5d",
        "filename": "internal/cmd/genpkghash/main.go",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-05-27T07:57:35Z",
      "side": 1,
      "message": "Not sure I agree. If genpkghash doesn\u0027t output anything because of an error it encounters in a package it is traversing, then it (genpkghash) should itself throw an error. Which would cause go generate to throw an error. In this case, other go generate generators do not run. I tend to think that in these sorts of situations code generators should be tolerant of errors and still output something, much like the parse outputs a partial AST even in the presence of errors (this is particularly important in situations like gopls). Not least because the situation will be eventually correct, and the hash will be eventually stable/correct.",
      "parentUuid": "89bf17b7_82fa5925",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "461e4ebb_9545f058",
        "filename": "internal/cmd/genpkghash/main.go",
        "patchSetId": 5
      },
      "lineNbr": 121,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-05-26T08:57:06Z",
      "side": 1,
      "message": "I\u0027m pretty sure you don\u0027t actually need to sort, because all the lists of source files above will be sorted themselves by cmd/go. Removing the need to sort also removes the need to build a complete `filesToHash` list, as your \"add\" function can directly write to the incremental hasher. That\u0027s what I would do.",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "460265a8_486658c8",
        "filename": "internal/cmd/genpkghash/main.go",
        "patchSetId": 5
      },
      "lineNbr": 121,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-05-26T17:34:30Z",
      "side": 1,
      "message": "I\u0027m pretty sure I do need to sort them. Because the members of GoFiles and IgnoredGoFiles might vary by platform. Hence the resulting order would be different, hence the hash would be different.",
      "parentUuid": "461e4ebb_9545f058",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ba1ab41_9b1ee6b0",
        "filename": "internal/cmd/genpkghash/main.go",
        "patchSetId": 5
      },
      "lineNbr": 121,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-05-26T20:50:04Z",
      "side": 1,
      "message": "Good point!",
      "parentUuid": "460265a8_486658c8",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85585a05_163c437c",
        "filename": "internal/cmd/genpkghash/main.go",
        "patchSetId": 5
      },
      "lineNbr": 148,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-05-26T08:57:06Z",
      "side": 1,
      "message": "\u003e Code generated *by* ...",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3cd9ad2_d8d3a11f",
        "filename": "internal/cmd/genpkghash/main.go",
        "patchSetId": 5
      },
      "lineNbr": 148,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-05-26T17:34:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85585a05_163c437c",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8f0e9fe_0d4786e0",
        "filename": "internal/cmd/genpkghash/main.go",
        "patchSetId": 5
      },
      "lineNbr": 152,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-05-26T08:57:06Z",
      "side": 1,
      "message": "might as well make this hash string a `const`, to prevent misuse",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2bceaad_8df133fc",
        "filename": "internal/cmd/genpkghash/main.go",
        "patchSetId": 5
      },
      "lineNbr": 152,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-05-26T17:34:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8f0e9fe_0d4786e0",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92f1ce56_27887343",
        "filename": "internal/cmd/preprocessor/cmd/cmd_test.go",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-05-26T08:57:06Z",
      "side": 1,
      "message": "s/now/not/\n\nI admit I don\u0027t particularly like this... :) Almost like there\u0027s no point in generating the hash via `go generate` if you\u0027re doing it via `go test` already.\n\nHow about making the test complain if the hash isn\u0027t up to date, instead of running generate itself? I would find that a lot more natural given what `go test` is meant to do. I would find any `go test` command updating tracked files to be a code smell, unless I gave it a custom flag like `-update`.",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe6b895e_46988a53",
        "filename": "internal/cmd/preprocessor/cmd/cmd_test.go",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-05-26T17:34:30Z",
      "side": 1,
      "message": "Good points. Done by adding a -check flag to genpkghash and running the command with that flag set in the test.",
      "parentUuid": "92f1ce56_27887343",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0418e66_ae3fecb3",
        "filename": "internal/cmd/preprocessor/cmd/main.go",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-05-26T08:57:06Z",
      "side": 1,
      "message": "surely genpkghash should already know to ignore its own output file, so that we don\u0027t have to repeat that here :)",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9caca47_46ce9f05",
        "filename": "internal/cmd/preprocessor/cmd/main.go",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-05-26T17:34:30Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "a0418e66_ae3fecb3",
      "revId": "c04a03f57070c4280cd022dc1b6d8dd105b7cf02",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}