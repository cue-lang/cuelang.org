package site
{
	content: {
		docs: {
			concept: {
				"how-cue-works-with-go": {
					page: {
						cache: {
							multi_step: {
								"6KOOUBUHGQN3MCNDEER3L8FVSDVKVQHRVOU7GILDRDV2P96R7I7G====": [{
									doc:      ""
									cmd:      "export GOMODCACHE=/caches/gomodcache"
									exitCode: 0
									output:   ""
								}, {
									doc:      ""
									cmd:      "export GOCACHE=/caches/gobuild"
									exitCode: 0
									output:   ""
								}, {
									doc:      ""
									cmd:      "go mod init cue.example"
									exitCode: 0
									output: """
											go: creating new go.mod: module cue.example

											"""
								}, {
									doc:      "#ellipsis 0"
									cmd:      "go get k8s.io/api/apps/v1@v0.23.4"
									exitCode: 0
									output: """
											...

											"""
								}, {
									doc:      ""
									cmd:      "cue get go k8s.io/api/apps/v1"
									exitCode: 0
									output:   ""
								}, {
									doc: """
											#ellipsis 31
											#use head, not cat, so the reader knows the file is truncated.
											"""
									cmd:      "head -31 cue.mod/gen/k8s.io/api/core/v1/types_go_gen.cue"
									exitCode: 0
									output: """
											// Code generated by cue get go. DO NOT EDIT.

											//cue:generate cue get go k8s.io/api/core/v1

											package v1

											import (
											\tmetav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
											\t"k8s.io/apimachinery/pkg/api/resource"
											\t"k8s.io/apimachinery/pkg/util/intstr"
											\t"k8s.io/apimachinery/pkg/types"
											)

											// NamespaceDefault means the object is in the default namespace which is applied when not specified by clients
											#NamespaceDefault: "default"

											// NamespaceAll is the default argument to specify on a context when you want to list or filter resources across all namespaces
											#NamespaceAll: ""

											// NamespaceNodeLease is the namespace where we place node lease objects (used for node heartbeats)
											#NamespaceNodeLease: "kube-node-lease"

											// Volume represents a named volume in a pod that may be accessed by any container in the pod.
											#Volume: {
											\t// Volume's name.
											\t// Must be a DNS_LABEL and unique within the pod.
											\t// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
											\tname: string @go(Name) @protobuf(1,bytes,opt)

											\t#VolumeSource
											}
											...

											"""
								}]
							}
						}
					}
				}
			}
		}
	}
}
