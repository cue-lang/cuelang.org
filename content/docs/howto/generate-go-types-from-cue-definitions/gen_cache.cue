package site
{
	content: {
		docs: {
			howto: {
				"generate-go-types-from-cue-definitions": {
					page: {
						cache: {
							upload: {
								"example 1":          "YwCNOP7MSAMZWQrcDX4HKJdmNf7npkxVeeGMhjhLNfI="
								"cue_types_gen.go 1": "wCBlU7tbLQpAL7WogEvu9cpK6HI4Bsp3KhkJFUNZVW4="
								"example 2":          "a2bQrWSHIJOCGCW0Eoz+ZszjhhyPm1VMztxdXLyhY+I="
								"cue_types_gen.go 2": "LhcOk5vBPMeOtP7Eqk+Jit14GjKXyL6Lntx+xTvg2k8="
							}
							multi_step: {
								hash:       "V5Q9PE8IKEG7GOGLS3SETD0NC8FREIOQU1D6BSCT4AUCA7LBLF20===="
								scriptHash: "KB8O40JMDLL8T4O3SFAQT83I7NMC9HF5MEDIT0HQEO4QR75CQMT0===="
								steps: [{
									doc:      ""
									cmd:      "cue exp gengotypes ."
									exitCode: 0
									output:   ""
								}, {
									doc:      ""
									cmd:      "cat cue_types_gen.go"
									exitCode: 0
									output: """
											// Code generated by "cue exp gengotypes"; DO NOT EDIT.

											package pet

											// aDog tracks information we hold about each dog.
											type ADog struct {
											\t// Dogs have at least one name.
											\tName string `json:"name"`

											\tAge float64 `json:"age,omitempty"`

											\tIsGoodBoy bool `json:"isGoodBoy"`
											}

											"""
								}, {
									doc:      ""
									cmd:      "mv cue_types_gen.go .cue_types_gen.go"
									exitCode: 0
									output:   ""
								}, {
									doc:      ""
									cmd:      "cue exp gengotypes ."
									exitCode: 0
									output:   ""
								}, {
									doc:      ""
									cmd:      "cat cue_types_gen.go"
									exitCode: 0
									output: """
											// Code generated by "cue exp gengotypes"; DO NOT EDIT.

											package acmecorppets

											// aCat represents an instance of Felis catus, the domestic cat.
											type Cat struct {
											\t// Cats consider themselves to have a title, not a name.
											\tName string `json:"title"`
											}

											// aDog tracks information we hold about each dog.
											type ADog struct {
											\t// Dogs have at least one name.
											\tName string `json:"name"`

											\tAge float64 `json:"age,omitempty"`

											\tIsGoodBoy bool `json:"isGoodBoy"`
											}

											"""
								}, {
									doc:      ""
									cmd:      "mv cue_types_gen.go .cue_types_gen.go"
									exitCode: 0
									output:   ""
								}]
							}
						}
					}
				}
			}
		}
	}
}
